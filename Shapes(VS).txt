#version 300 es
//#version 450

/*
	Title: Lab 8 Shader Pipelines
	Instructor Name: Daniel Buckstein
	Authors: Andrew Barnett & Shakeem Brown
*/

//  SPHERE OBJECT-SPACE
layout (location = 0) in vec4 aPosition;
layout (location = 1) in vec3 aNormal;

// TRANSFORM UNIFORMS
uniform mat4 uModelMat, uViewMat, uProjMat, uPerMat;
uniform vec3 lightPos;

// VARYINGS
out vec4 vPosClip;
out vec4 objPos;
out vec4 norm;

vec3 depthTest()
{
    mat4 invViewMat = inverse(uViewMat);
	vec3 wPoint = vec3(invViewMat * vec4(lightPos, 1.0));
	vec3 lightSpacePoint = vec3(uPerMat * vec4(wPoint, 1.0));
	lightSpacePoint = lightSpacePoint * 0.5 + 0.5;
	float realDepth = lightSpacePoint.z;
	return lightSpacePoint;
}

void main()
{
    // OBJECT POSITION PIPELINE
    mat4 modelViewMat = uViewMat * uModelMat;
	vec4 pos_view = modelViewMat * aPosition;
	vec4 pos_clip = uProjMat * pos_view;
	gl_Position = uProjMat * uViewMat * uModelMat * aPosition;
	
	mat4 biMat = mat4(0.5, 0.0, 0.0, 0.0,
	                  0.0, 0.5, 0.0, 0.0,
	                  0.0, 0.0, 0.5, 0.0,
	                  0.5, 0.5, 0.5, 1.0);
	
	vPosClip = gl_Position;
}

